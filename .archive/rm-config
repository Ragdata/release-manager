#!/usr/bin/env bash
# shellcheck disable=SC2034,SC1090,SC2015
# ==================================================================
# release
# ==================================================================
# Release Manager - Automated Release & Deployment Bot
#
# File:         release
# Author:       Ragdata
# Date:         13/01/2023
# License:      MIT License
# Copyright:    Copyright Â© 2022-2023 Darren (Ragdata) Poulton
# ==================================================================
# Installs Release-Manager as part of your System
# Usage:
#   ./rm-config
# ==================================================================
# REQUIREMENTS
# ==================================================================
# Ensure the following packages are installed:
#   - git
# ==================================================================
set -e

ACTION="${1:setup}"

export RM_REPO="$PWD"

INCFILES=(
    "$RM_REPO/src/bin/rm-install"
    "$RM_REPO/src/lib/functions.lib"
    "$RM_REPO/src/lib/log.lib"
)

[[ -f ".path" ]] && source "$RM_REPO/.path" || source "$RM_REPO/.path.dist"

for i in "${!INCFILES[@]}"
do
    filePath="${INCFILES[$i]}"
    if [[ -f "$filePath" ]]; then source "$filePath"; else echo "ERROR :: File '$filePath' Not Found!"; fi
done

if [[ "${BASH_VERSION:0:1}" -lt 4 ]]; then
    echo "This script requires a minimum Bash version of 4+!"
    exit 1
fi
if [[ "$EUID" -ne 0 ]]; then
    echo "This script MUST be run as root! (sudo ./bb-config)"
    exit 1
fi

[ "$SUDO_USER" ] && user=$SUDO_USER || user=$(whoami)

setup() {
    clear
    echo "Release Manager Configuration"
    echo
    echo "Configuring Global Environment Variables"

    install -m 644 -g "$user" -o "$user" .env.dist .env
    install -m 644 -g "$user" -o "$user" .path.dist .path

    echo "export RM_REPO=$(pwd)" >> .path

    echo "export PATH=$RM_LIB:$RM_BIN:$ETC:$PATH" >> .path

    install -m 644 -g root -o root --backup=simple .path /etc/profile.d/rm-path.sh

    cp /etc/environment /etc/environment~

    file2Env .path "release"

    echo
    echo "DONE!"
    echo
    echo "In order to complete configuration, you need to close this session and login again"
    echo
}

if [[ $ACTION == 'setup' ]]; then
    setup
elif [[ $ACTION == 'install' ]]; then
    rmInstall
fi








































#RESP='^[YyNn]$'
#AFFIRM='^[Yy]$'
#isPATH='^(/[^/]*)*(/?.+(\..+))$'
#
#[[ -z "$VERSION_CONTROL" ]] && VERSION_CONTROL=simple
#
#while [[ ! $REPO_PATH =~ $isPATH ]]
#do
#    echo -n "Repository Full Path: "
#    read -r REPO_PATH
#done
#
#[[ ! -f "$REPO_PATH" ]] && echo -e "ERROR :: Path Not Found!\nEnsure you provide the FULL path to the repository" && exit 1
#
## Copy Files to Repo
#cp src/.rm.dist "$REPO_PATH"/.rm
#cp src/release "$REPO_PATH"/release
#
## Ensure files are ignored in a git repository
#if [[ -d "$REPO_PATH"/.git ]]; then
#    if [[ -f "$REPO_PATH"/.gitignore ]]; then
#        echo -e "\n.rm\nrelease" >> "$REPO_PATH"/.gitignore
#    else
#        echo
#        echo -e ".rm\nrelease" > "$REPO_PATH"/gitignore
#    fi
#fi
