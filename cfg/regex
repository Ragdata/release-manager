#!/usr/bin/env bash
# shellcheck disable=SC2034

#PATTERN='((\{\{(#|/)?([a-z\.\_][a-z0-9\.\_]+)( ([a-z\.\_][a-z0-9\.\_]+))?\}\})+)'
#OPEN='((\{\{#([a-z\.\_][a-z0-9\.\_]+)( ([a-z\.\_][a-z0-9\.\_]+))?\}\})+)'
#CLOSE='((\{\{/([a-z\.\_][a-z0-9\.\_]+)( ([a-z\.\_][a-z0-9\.\_]+))?\}\})+)'
#CMD='((\{\{(#|/)+(if|each)( ([a-z\.\_][a-z0-9\.\_]+))\}\})+)'
#COND='((\{\{(#|/)+(if)( ([a-z\.\_][a-z0-9\.\_]+))\}\})+)'
#COND_OPEN='((\{\{#(if)( ([a-z\.\_][a-z0-9\.\_]+))\}\})+)'
#COND_CLOSE='((\{\{/(if)( ([a-z\.\_][a-z0-9\.\_]+))\}\})+)'
#LOOP='((\{\{(#|/)+(each)( ([a-z\.\_][a-z0-9\.\_]+))\}\})+)'
#LOOP_OPEN='((\{\{#(each)( ([a-z\.\_][a-z0-9\.\_]+))\}\})+)'
#LOOP_CLOSE='((\{\{/(each)( ([a-z\.\_][a-z0-9\.\_]+))\}\})+)'
##VAR='^(.*)(\{\{([a-z\.\_][a-z0-9\.\_]+)\}\})'
#VAR='^.*(\{\{[a-z\_]*\}\})'
#
#SCRIPT="stuff {{#doc open}} stuff {{/doc close}} stuff"
#SCRIPT2="Changelog last updated on {{date_today}} for [{{name}}]({{repo_url}}) by [Release Manager](https://github.com/ragdata/release-manager)"
#
##if [[ ${SCRIPT2,,} =~ $VAR ]]; then
##	echo "MATCHED"
##	echo "${BASH_REMATCH[*]}"
##	for i in "${!BASH_REMATCH[@]}"
##	do
##		echo "${BASH_REMATCH[$i]}"
##	done
##fi
#
#while [[ ${SCRIPT2,,} =~ $VAR ]]
#do
#	match="${BASH_REMATCH[0]}"
#	one="${BASH_REMATCH[1]}"
#	two="${BASH_REMATCH[2]}"
#	three="${BASH_REMATCH[3]}"
#	four="${BASH_REMATCH[4]}"
#
#	echo "MATCHING: $match || $one || $two || $three || $four"
#	exit
#done
#STRING="Changelog last updated on {{date_today}} for [{{name}}]({{repo_url}}) by [Release Manager](https://github.com/ragdata/release-manager)"
#read -a ASTRING <<< "$STRING"
#for aString in "${ASTRING[@]}"
#do
#	echo "$aString"
#done
VAR='((\{\{\s*([a-z\.\_][a-z0-9\.\_]+)\s*\}\})+)'
STRING="Changelog last updated on {{date_today}} for [{{name}}]({{repo_url}}) by [Release Manager](https://github.com/ragdata/release-manager)"
#STRING="* {{#if commit_scope not empty}}({{commit_scope}}) {{/if}}{{commit_subject}} [{{commit_ref}}]({{ commit_url }})"
#vars=$(echo "$STRING" | grep -oE '\{\{\s*[A-Za-z0-9_]+\s*\}\}' | sort | uniq | sed -e 's/^{{//' -e 's/}}$//')
vars=$(echo "$STRING" | grep -oE "$VAR")
echo $vars
